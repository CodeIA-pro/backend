# Generated by Django 4.1.11 on 2023-11-07 00:19

from django.db import migrations, models
import djongo.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Asset",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "version",
                    models.CharField(blank=True, default="1.0.0", max_length=10),
                ),
                ("titulo", models.CharField(blank=True, max_length=100)),
                ("description", models.TextField(blank=True)),
                ("more_description", models.TextField(blank=True)),
                ("depth", models.IntegerField(blank=True, default=0)),
                ("url", models.TextField(blank=True)),
                ("is_father", models.BooleanField(blank=True, default=False)),
                ("father_id", models.IntegerField()),
                ("project_id", models.IntegerField(blank=True)),
                (
                    "subsection",
                    djongo.models.fields.ArrayReferenceField(
                        blank=True,
                        default=list,
                        on_delete=djongo.models.fields.ArrayReferenceField._on_delete,
                        to="codeia.asset",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user", models.IntegerField()),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("type_comment", models.IntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="TypeComment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=100)),
                ("branch", models.CharField(blank=True, max_length=100)),
                ("url_repo", models.TextField(blank=True)),
                ("user_repo", models.TextField(blank=True)),
                ("latest_build", models.DateTimeField(auto_now_add=True)),
                ("last_version", models.CharField(blank=True, max_length=100)),
                (
                    "assets",
                    djongo.models.fields.ArrayReferenceField(
                        blank=True,
                        default=list,
                        on_delete=djongo.models.fields.ArrayReferenceField._on_delete,
                        to="codeia.asset",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FAQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(blank=True, max_length=100)),
                ("answer", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "additional",
                    djongo.models.fields.ArrayReferenceField(
                        blank=True,
                        default=list,
                        on_delete=djongo.models.fields.ArrayReferenceField._on_delete,
                        to="codeia.faq",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("surname", models.CharField(max_length=100)),
                ("email", models.EmailField(max_length=100, unique=True)),
                ("nationality", models.CharField(max_length=100)),
                ("date_of_birth", models.DateField(null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("role", models.CharField(default="guest", max_length=20)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "projects",
                    djongo.models.fields.ArrayReferenceField(
                        blank=True,
                        default=list,
                        on_delete=djongo.models.fields.ArrayReferenceField._on_delete,
                        to="codeia.project",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
